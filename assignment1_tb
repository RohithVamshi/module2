module register_axi_tb();

reg clk, reset;
    reg valid, ready;
    reg [7:0] data;
    wire [7:0] out;

       
    register_axi instance1 (
        .data(data),
        .valid(valid),
        .ready(ready),  
        .clk(clk),
        .reset(reset),
        .out(out)
    );

    
    initial begin
        clk = 1'b1;
        forever #5 clk = ~clk;
    end

   
    

   
    initial begin
     reset = 1'b0;
        #20; 
        reset = 1'b1; 
        #20; 
        reset = 1'b0;
        #40; 

         valid = 1'b1; ready = 1'b1; 
        #100; 
         valid = 1'b1; ready = 1'b0; 
        #100; 
         valid = 1'b0; ready = 1'b1; 
        #100; 
        data = 8'h44; valid = 1'b1; ready = 1'b1;
        #100; 
                data = 8'h54; valid = 1'b0; ready = 1'b1;
                #100;
                        data = 8'h44; valid = 1'b1; ready = 1'b1;
           #100;    
            data = 8'h35; valid = 1'b1; ready = 1'b0;
            #100;
                    data = 8'h56; valid = 1'b1; ready = 1'b1;



    end
    
        initial
    begin
    repeat (100)
        begin
            
            #20
            data = $random;
            
        end
     end


endmodule

