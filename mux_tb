module mux_axi_tb();
    reg clk, last;
    reg valid, ready;
    reg sel;
    reg [7:0] a,b;
    wire [7:0] out;
     mux_axi m2 (a,b,sel,valid,ready, clk, last,out);
    initial begin
        clk = 1'b1;
        forever #5 clk = ~clk;
    end

    // Reset assertion and de-assertion
    initial begin
        last = 1'b0;
        #20; // Wait for some time after reset
        last = 1'b1; // Assert reset
        #20; // Wait for some time after asserting reset
        last = 1'b0; // De-assert reset
    end

    // Stimulus generation
    
    initial
    begin
    sel = 1'b0;
    forever # 20 sel = ~sel;
    end
    initial 
    begin
     valid = 1'b1; ready = 1'b1;
        #100; // Wait for DUT processing time
        valid = 1'b1; ready = 1'b0; 
        #100; // Wait for DUT processing time
        valid = 1'b0; ready = 1'b1;
        #100; // Wait for DUT processing time
       valid = 1'b1; ready = 1'b1;
        #100; 
        valid = 1'b1; ready = 1'b0; 
        
        #100;// Wait for DUT processing time
        valid = 1'b0; ready = 1'b1;
        #100 
        valid = 1'b1; ready = 1'b1;
        #100
                valid = 1'b0; ready = 1'b0;
                #100
        valid = 1'b1; ready = 1'b0;  
        #100
        valid = 1'b0; ready = 1'b1;
        #100
        valid = 1'b1; ready = 1'b1; 
        
        
     end
     
     
    initial
    begin
    repeat (1000)
        begin
            
            #20
            a = $random;
            
        end
     end
     
    initial
    begin
    repeat (1000)
        begin
            
            #20
            b = $random;
            
        end
     end


endmodule
